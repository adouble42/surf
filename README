binary deb - http://mrn.sixbit.org/files/surf_0.7-1.2_i386.deb

surf - simple webkit-based browser
==================================
surf is a simple Web browser based on WebKit/GTK+.
i didn't originally plan on forking it but here we are and i did so i guess
the next thing is a name.
i'll get back on that later.
for now, it's a fork of surf that lets you switch in and out of strict SSL
mode at will (-yY on the command line, ctrl-shift-y in browsing), with the
regex patch and some debian patches integrated. the regex patch is from
the suckless page, although in the end i only appropriated the majority of
that, as well. the regex here instead of redirecting you to about:blank,
decides what user agent to send out.
i've got a project using this as a tor browser behind a transparent proxy on
separate hardware, surf has long been supplanting TBB as my preferred browser
in the live system the proxy PXE boots to ethernet clients.
the user agent trick, i figure to be an advantage for a couple of reasons.
first off, it's controlled by regex filters which can be configured for
anything you'd like.
i've taken a hint from tor, and also their bundled fonts. using surf-fork
in conjunction with Firejail, some scripts, and fluxfonts (github, 
da2x/fluxfonts), we can fake it as appropriate.
i also use surf to negotiate captive portals, in a separate configuration.
this is also my first foray in to building packages for debian. i wanted to
stay in the framework as much as possible...at first i found it more
daunting than actually coding, to package a .deb...i'll put up a source
package soon, the binary here is i386. i need to generate another source
package later, my one and only problem was on completion, and it's not really
a problem. i moved a file or touched it or something inane.
so as far as dependencies go...webkit, gtk...or pull the source deb for surf,
push all the diffs on with quilt, add another one, and put these limes in
that coconut.

cheers.

Requirements
------------
In order to build surf you need GTK+ and Webkit/GTK+ header files.

In order to use the functionality of the url-bar, also install dmenu[0].

Installation
------------
Edit config.mk to match your local setup (surf is installed into
the /usr/local namespace by default).

Afterwards enter the following command to build and install surf (if
necessary as root):

    make clean install

Running surf
------------
run
	surf [URI]

See the manpage for further options.

Running surf in tabbed
----------------------
For running surf in tabbed[1] there is a script included in the distribution,
which is run like this:

	surf-open.sh [URI]

Further invocations of the script will run surf with the specified URI in this
instance of tabbed.

[0] http://tools.suckless.org/dmenu
[1] http://tools.suckless.org/tabbed

